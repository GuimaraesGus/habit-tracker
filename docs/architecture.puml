@startuml HabitTrackerArchitecture

title Habit Tracker - Arquitetura de Solução

skinparam rectangle {
  BackgroundColor<<REST Controller>> LightBlue
  BackgroundColor<<Service>> LightGreen
  BackgroundColor<<JPA Repository>> Wheat
  BackgroundColor<<MapStruct>> LightYellow
  BackgroundColor<<DTO>> MistyRose
  BackgroundColor<<Entity>> Thistle
}

package "Frontend / API Consumer" {
    rectangle "Swagger UI" 
    rectangle "VSCode Debugger"
}

package "Java + Spring Boot Application" {
    package "API Layer" {
        rectangle "HabitController" <<REST Controller>>
    }

    package "Service Layer" {
        rectangle "HabitService" <<Service>>
        rectangle "HabitExportService" <<Service>>
    }

    package "Data Access Layer" {
        rectangle "HabitMapper" <<MapStruct>>
        rectangle "HabitRepository" <<JPA Repository>>
    }

    package "Model" {
        rectangle "HabitEntity" <<Entity>>
        rectangle "HabitDTO" <<DTO>>
    }
}

package "Infrastructure" {
    folder "filesystem (habit-tracker/export/)" {
        file "habits-export-{timestamp}.json" <<File>>
    }
}

package "Docker" {
    package "Database" {
        database "PostgreSQL" as db
    }
}

[Swagger UI] --> [HabitController] : Chama REST APIs
[VSCode Debugger] --> [HabitController] : Dev/Test

[HabitController] --> [HabitService] : Chama lógica de negócio
[HabitService] --> [HabitRepository] : Acessa DB
[HabitService] --> [HabitMapper] : Converte \n DTO <-> Entity
[HabitService] -> [HabitExportService] : Acessa para exportar dados \n caso alteração no bd
[HabitExportService] --> "habits-export-{timestamp}.json" : Cria JSON

[HabitRepository] --> db : JPA/Hibernate \n CRUD
[HabitMapper] --> [HabitDTO] : mapeia para
[HabitMapper] --> [HabitEntity] : mapeia de

@enduml
